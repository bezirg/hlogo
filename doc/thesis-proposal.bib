
@article{herlihy_transactional_1993,
	title = {Transactional memory: architectural support for lock-free data structures},
	volume = {21},
	issn = {0163-5964},
	shorttitle = {Transactional memory},
	url = {http://doi.acm.org/10.1145/173682.165164},
	doi = {10.1145/173682.165164},
	abstract = {A shared data structure is lock-free if its operations do not require mutual exclusion. If one process is interrupted in the middle of an operation, other processes will not be prevented from operating on that object. In highly concurrent systems, lock-free data structures avoid common problems associated with conventional locking techniques, including priority inversion, convoying, and difficulty of avoiding deadlock. This paper introduces transactional memory, a new multiprocessor architecture intended to make lock-free synchronization as efficient (and easy to use) as conventional techniques based on mutual exclusion. Transactional memory allows programmers to define customized read-modify-write operations that apply to multiple, independently-chosen words of memory. It is implemented by straightforward extensions to any multiprocessor cache-coherence protocol. Simulation results show that transactional memory matches or outperforms the best known locking techniques for simple benchmarks, even in the absence of priority inversion, convoying, and deadlock.},
	number = {2},
	urldate = {2012-12-23},
	author = {Herlihy, Maurice and Moss, J. Eliot B.},
	month = may,
	year = {1993},
	keywords = {Software Transactional Memory},
	pages = {289–300},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/NX9CCNIE/Herlihy and Moss - 1993 - Transactional memory architectural support for lo.pdf:application/pdf}
},

@inproceedings{shavit_software_1995,
	address = {New York, {NY}, {USA}},
	series = {{PODC} '95},
	title = {Software transactional memory},
	isbn = {0-89791-710-3},
	url = {http://doi.acm.org/10.1145/224964.224987},
	doi = {10.1145/224964.224987},
	urldate = {2012-12-23},
	booktitle = {Proceedings of the fourteenth annual {ACM} symposium on Principles of distributed computing},
	publisher = {{ACM}},
	author = {Shavit, Nir and Touitou, Dan},
	year = {1995},
	keywords = {Software Transactional Memory},
	pages = {204–213},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/2B642PFR/Shavit and Touitou - 1995 - Software transactional memory.pdf:application/pdf}
},

@article{inchiosa_overcoming_2002,
	title = {Overcoming design and development challenges in agent-based modeling using {ASCAPE}},
	volume = {99},
	issn = {00278424, 10916490},
	url = {http://www.pnas.org/content/99/suppl.3/7304.full.pdf+html?frame=sidebar},
	doi = {10.1073/pnas.082081199},
	number = {90003},
	urldate = {2012-12-24},
	author = {Inchiosa, M. E.},
	month = may,
	year = {2002},
	keywords = {Agent-based Simulation, Ascape, Java, Sugarscape},
	pages = {7304--7308},
	file = {Overcoming design and development challenges in agent-based modeling using ascape:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/85ZWSEBX/7304.full.html:text/html}
},

@inproceedings{knight_architecture_1986,
	address = {New York, {NY}, {USA}},
	series = {{LFP} '86},
	title = {An architecture for mostly functional languages},
	isbn = {0-89791-200-4},
	url = {http://doi.acm.org/10.1145/319838.319854},
	doi = {10.1145/319838.319854},
	urldate = {2012-12-23},
	booktitle = {Proceedings of the 1986 {ACM} conference on {LISP} and functional programming},
	publisher = {{ACM}},
	author = {Knight, Tom},
	year = {1986},
	keywords = {Software Transactional Memory},
	pages = {105–112},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/N4PP4423/Knight - 1986 - An architecture for mostly functional languages.pdf:application/pdf}
},

@incollection{peyton_jones_beautiful_2007,
	title = {Beautiful concurrency},
	isbn = {9780596510046},
	abstract = {How do the experts solve difficult problems in software development? In this unique and insightful book, leading computer scientists offer case studies that reveal how they found unusual, carefully designed solutions to high-profile projects. You will be able to look over the shoulder of major coding and design experts to see problems through their eyes. This is not simply another design patterns book, or another software engineering treatise on the right and wrong way to do things. The authors think aloud as they work through their project's architecture, the tradeoffs made in its construction, and when it was important to break rules.  This book contains 33 chapters contributed by Brian Kernighan, Karl Fogel, Jon Bentley, Tim Bray, Elliotte Rusty Harold, Michael Feathers, Alberto Savoia, Charles Petzold, Douglas Crockford, Henry S. Warren, Jr., Ashish Gulhati, Lincoln Stein, Jim Kent, Jack Dongarra and Piotr Luszczek, Adam Kolawa, Greg Kroah-Hartman, Diomidis Spinellis, Andrew Kuchling, Travis E. Oliphant, Ronald Mak, Rogerio Atem de Carvalho and Rafael Monnerat, Bryan Cantrill, Jeff Dean and Sanjay Ghemawat, Simon Peyton Jones, Kent Dybvig, William Otte and Douglas C. Schmidt, Andrew Patzer, Andreas Zeller, Yukihiro Matsumoto, Arun Mehta, {TV} Raman, Laura Wingerd and Christopher Seiwald, and Brian Hayes.  Beautiful Code is an opportunity for master coders to tell their story. All author royalties will be donated to Amnesty International.},
	language = {en},
	booktitle = {Beautiful Code: Leading Programmers Explain How They Think},
	publisher = {{O'Reilly} Media, Inc.},
	author = {Peyton Jones, Simon},
	month = aug,
	year = {2007},
	keywords = {Computers / Software Development \& Engineering / General, Haskell, Software Transactional Memory}
},

@incollection{peyton_jones_tutorial_2009,
	series = {Lecture Notes in Computer Science},
	title = {A Tutorial on Parallel and Concurrent Programming in Haskell},
	copyright = {©2009 Springer Berlin Heidelberg},
	isbn = {978-3-642-04651-3, 978-3-642-04652-0},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-3-642-04652-0_6},
	abstract = {This practical tutorial introduces the features available in Haskell for writing parallel and concurrent programs. We first describe how to write semi-explicit parallel programs by using annotations to express opportunities for parallelism and to help control the granularity of parallelism for effective execution on modern operating systems and processors. We then describe the mechanisms provided by Haskell for writing explicitly parallel programs with a focus on the use of software transactional memory to help share information between threads. Finally, we show how nested data parallelism can be used to write deterministically parallel programs which allows programmers to use rich data types in data parallel programs which are automatically transformed into flat data parallel versions for efficient execution on multi-core processors.},
	number = {5832},
	urldate = {2012-12-23},
	booktitle = {Advanced Functional Programming},
	publisher = {Springer Berlin Heidelberg},
	author = {Peyton Jones, Simon and Singh, Satnam},
	editor = {Koopman, Pieter and Plasmeijer, Rinus and Swierstra, Doaitse},
	month = jan,
	year = {2009},
	keywords = {Algorithm Analysis and Problem Complexity, Concurrency, Haskell, Mathematical Logic and Formal Languages, Parallelism, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering, Software Transactional Memory, Theory of Computation, Tutorial},
	pages = {267--305},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/MDBXBRRB/10.html:text/html}
},

@incollection{peyton_jones_tackling_2001,
	title = {Tackling the Awkward Squad: monadic input/output, concurrency, exceptions, and foreign-language calls in Haskell},
	isbn = {9781586031725},
	abstract = {The state of the art of software engineering techniques - being used in or required for current industrial tasks - shall be examined by world leading experts on the basis of sound mathematical foundations. Over the last thirty years the scientific foundation of programming has been developed for a broad spectrum of programming aspects. At the same time practical software engineering has entered many additional applications ranging from telecommunications to embedded systems in car and aircraft industry as well as in production engineering, and further to computer networks distributed over wide-area hardware nets. For all these applications there is an urgent need to improve the software engineering techniques on the basis of sound scientific foundations. The book will present the state of the art in the area of mathematical foundations of software engineering. All engineering methods being presented are well understood in their theoretical substance. Now they are at the step towards practical applications.},
	language = {en},
	booktitle = {Engineering Theories of Software Construction: Proceedings of the {NATO} Advanced Study Institute on ... 25 July - 6 August 2000, Marktoberdorf, Germany},
	publisher = {{IOS} Press},
	author = {Peyton Jones, Simon},
	year = {2001},
	keywords = {Computers / Networking / General, Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Systems Analysis \& Design, Concurrency, Exceptions, {FFI}, Haskell, Monad, Parallelism, Tutorial}
},

@inproceedings{harris_composable_2005,
	address = {New York, {NY}, {USA}},
	series = {{PPoPP} '05},
	title = {Composable memory transactions},
	isbn = {1-59593-080-9},
	url = {http://doi.acm.org/10.1145/1065944.1065952},
	doi = {10.1145/1065944.1065952},
	abstract = {Writing concurrent programs is notoriously difficult, and is of increasing practical importance. A particular source of concern is that even correctly-implemented concurrency abstractions cannot be composed together to form larger abstractions. In this paper we present a new concurrency model, based on transactional memory, that offers far richer composition. All the usual benefits of transactional memory are present (e.g. freedom from deadlock), but in addition we describe new modular forms of blocking and choice that have been inaccessible in earlier work.},
	urldate = {2012-12-23},
	booktitle = {Proceedings of the tenth {ACM} {SIGPLAN} symposium on Principles and practice of parallel programming},
	publisher = {{ACM}},
	author = {Harris, Tim and Marlow, Simon and Peyton-Jones, Simon and Herlihy, Maurice},
	year = {2005},
	keywords = {Haskell, locks, non-blocking algorithms, Software Transactional Memory, transactions},
	pages = {48–60},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/P5H9CMGS/Harris et al. - 2005 - Composable memory transactions.pdf:application/pdf}
},

@article{discolo_lock_2006,
	title = {Lock -Free Data Structures using {STMs} in Haskell},
	url = {http://research.microsoft.com/~simonpj/papers/stm/lock-free.htm},
	abstract = {This paper explores the feasibility of re-expressing concurrent algorithms with explicit locks in terms of lock free code written using Haskell's implementation of Software Transactional Memory ({STM).} Preliminary experimental results are presented which show that for multi-processor systems the simpler lock free implementations offer competitive or superior performance when compared to their corresponding the lock based implementations.},
	urldate = {2012-12-23},
	author = {Discolo, Anthony and Harris, Tim and Marlow, Simon and Peyton and Singh, Satnamproxy},
	month = apr,
	year = {2006},
	keywords = {Haskell, Software Transactional Memory}
},

@book{harris_transactional_2006,
	title = {Transactional memory with data invariants},
	abstract = {This paper introduces a mechanism for asserting invariants that are maintained by a program that uses atomic memory transactions. The idea is simple: a programmer writes check E where E is an expression that should be preserved by every atomic update for the remainder of the program’s execution. We have extended {STM} Haskell to dynamically evaluate check statements atomically with the user’s updates: the result is that we can identify precisely which update is the first one to break an invariant.},
	author = {Harris, Tim and Peyton Jones, Simon},
	year = {2006},
	keywords = {Haskell, Software Transactional Memory},
	file = {Citeseer - Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/229I7796/Harris and al - 2006 - Transactional memory with data invariants.pdf:application/pdf;Citeseer - Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/3PGRXS5S/summary.html:text/html}
},

@inproceedings{perfumo_limits_2008,
	address = {New York, {NY}, {USA}},
	series = {{CF} '08},
	title = {The limits of software transactional memory ({STM):} dissecting Haskell {STM} applications on a many-core environment},
	isbn = {978-1-60558-077-7},
	shorttitle = {The limits of software transactional memory ({STM)}},
	url = {http://doi.acm.org/10.1145/1366230.1366241},
	doi = {10.1145/1366230.1366241},
	abstract = {In this paper, we present a Haskell Transactional Memory benchmark to provide a comprehensive application suite for the use of Software Transactional Memory ({STM)} researchers. We develop a framework to profile the execution of the benchmark applications and to collect detailed runtime data on their transactional behavior, running them on a 128-core multiprocessor. Using a composite of the collected raw data, we propose new transactional performance metrics. We analyze key statistics related to scalability, atomic sections, transactional events, overall transactional overhead and the relative hardware performance, accordingly drawing conclusions on the results. Our findings advance our comprehension on the {STM} runtime and the characteristics of different applications under the transactional management of the pure, functional programming language, Haskell.},
	urldate = {2012-12-23},
	booktitle = {Proceedings of the 5th conference on Computing frontiers},
	publisher = {{ACM}},
	author = {Perfumo, Cristian and Sönmez, Nehir and Stipic, Srdjan and Unsal, Osman and Cristal, Adrián and Harris, Tim and Valero, Mateo},
	year = {2008},
	keywords = {Haskell, instrumentation, Software Transactional Memory},
	pages = {67–78},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/FFHIM2XD/Perfumo et al. - 2008 - The limits of software transactional memory (STM).pdf:application/pdf}
},

@techreport{schreiber_construct_2004,
	title = {Construct – A Multi-agent network model for the co-evolution of agents and socio-cultural environments},
	author = {Schreiber, Craig and Singh, Siddhartha and Carley, Kathleen},
	month = may,
	year = {2004},
	keywords = {Agent-based Simulation, multi-agent}
},

@article{railsback_agent-based_2006,
	title = {Agent-based Simulation Platforms: Review and Development Recommendations},
	volume = {82},
	issn = {0037-5497, 1741-3133},
	shorttitle = {Agent-based Simulation Platforms},
	url = {http://sim.sagepub.com.proxy.library.uu.nl/content/82/9/609},
	doi = {10.1177/0037549706073695},
	abstract = {Five software platforms for scientific agent-based models ({ABMs)} were reviewed by implementing example models in each. {NetLogo} is the highest-level platform, providing a simple yet powerful programming language, built-in graphical interfaces, and comprehensive documentation. It is designed primarily for {ABMs} of mobile individuals with local interactions in a grid space, but not necessarily clumsy for others. {NetLogo} is highly recommended, even for prototyping complex models. {MASON}, Repast, and Swarm are “framework and library” platforms, providing a conceptual framework for organizing and designing {ABMs} and corresponding software libraries. {MASON} is least mature and designed with execution speed a high priority. The Objective-C version of Swarm is the most mature library platform and is stable and well organized. Objective-C seems more natural than Java for {ABMs} but weak error-handling and the lack of developer tools are drawbacks. Java Swarm allows Swarm’s Objective-C libraries to be called from Java; it does not seem to combine the advantages of the two languages well. Repast provides Swarm-like functions in a Java library and is a good choice for many, but parts of its organization and design could be improved. A rough comparison of execution speed found {MASON} and Repast usually fastest ({MASON} 1-35\% faster than Repast), Swarm (including Objective-C) fastest for simple models but slowest for complex ones, and {NetLogo} intermediate. Recommendations include completing the documentation (for all platforms except {NetLogo)}, strengthening conceptual frameworks, providing better tools for statistical output and automating simulation experiments, simplifying common tasks, and researching technologies for understanding how simulation results arise.},
	language = {en},
	number = {9},
	urldate = {2012-12-24},
	journal = {{SIMULATION}},
	author = {Railsback, Steven F. and Lytinen, Steven L. and Jackson, Stephen K.},
	month = sep,
	year = {2006},
	keywords = {Agent-based modeling, Agent-based Simulation, benchmark, comparison, individual-based modeling, {MASON}, {NetLogo}, Repast, software platforms, Swarm},
	pages = {609--623},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/RVHWPBX3/Railsback et al. - 2006 - Agent-based Simulation Platforms Review and Devel.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/MGZ99M5K/609.html:text/html}
},

@article{white_software_2012,
	title = {Software review: the {ECJ} toolkit},
	volume = {13},
	issn = {1389-2576, 1573-7632},
	shorttitle = {Software review},
	url = {http://link.springer.com.proxy.library.uu.nl/article/10.1007/s10710-011-9148-z},
	doi = {10.1007/s10710-011-9148-z},
	language = {en},
	number = {1},
	urldate = {2012-12-25},
	journal = {Genet Program Evolvable Mach},
	author = {White, David R.},
	month = mar,
	year = {2012},
	keywords = {Agent-based Simulation, Artificial Intelligence (incl. Robotics), Biomedical Engineering, Electrical Engineering, Evolutionary Computing, Genetic Programming, {GPGPU}, Java, Multithreading, Programming Languages, Compilers, Interpreters, Programming Techniques, Software {Engineering/Programming} and Operating Systems},
	pages = {65--67},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/X5UTD8KG/White - 2012 - Software review the ECJ toolkit.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/X2ZGAHW4/10.html:text/html}
},

@inproceedings{dsouza_sugarscape_2007,
	title = {{SugarScape} on steroids: simulating over a million agents at interactive rates},
	shorttitle = {{SugarScape} on steroids},
	booktitle = {Proceedings of Agent2007 conference. Chicago, {IL}},
	author = {{D'Souza}, R. M. and Lysenko, M. and Rahmani, K.},
	year = {2007},
	keywords = {Agent-based Simulation, {GPGPU}, Sugarscape}
},

@misc{_robert_2004,
	title = {Robert Tobias and Carole Hofmann: Evaluation of free Java-libraries for social-scientific agent based simulation},
	url = {http://jasss.soc.surrey.ac.uk.proxy.library.uu.nl/7/1/6.html},
	urldate = {2012-12-28},
	year = {2004},
	keywords = {Agent-based Simulation, comparison, Repast, Swarm},
	howpublished = {http://jasss.soc.surrey.ac.uk.proxy.library.uu.nl/7/1/6.html},
	file = {Robert Tobias and Carole Hofmann: Evaluation of free Java-libraries for social-scientific agent based simulation:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/ZEPU92PB/6.html:text/html}
},

@article{lysenko_framework_2008,
	title = {A framework for megascale agent based model simulations on graphics processing units},
	volume = {11},
	url = {http://jasss.soc.surrey.ac.uk.proxy.library.uu.nl/11/4/10/10.pdf},
	number = {4},
	urldate = {2012-12-25},
	author = {Lysenko, M. and {D'Souza}, R. M.},
	year = {2008},
	keywords = {Agent-based Simulation, {GPGPU}, Sugarscape},
	pages = {10},
	file = {[PDF] from surrey.ac.uk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/S9CPZ9FJ/Lysenko and D'Souza - 2008 - A framework for megascale agent based model simula.pdf:application/pdf}
},

@article{phelps_applying_2011,
	title = {Applying dependency injection to agent-based modeling: the {JABM} toolkit},
	shorttitle = {Applying dependency injection to agent-based modeling},
	url = {https://www.sx.ac.uk/ccfea/research/WorkingPapers/2012/CCFEA-WP056-12.pdf},
	urldate = {2012-12-25},
	author = {Phelps, S.},
	year = {2011},
	keywords = {Agent-based Simulation, Java},
	file = {[PDF] from sx.ac.uk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/TXC4ANQ2/Phelps - 2011 - Applying dependency injection to agent-based model.pdf:application/pdf}
},

@incollection{moehring_social_1996,
	title = {Social science multilevel simulation with {MIMOSE}},
	isbn = {9783540615729},
	abstract = {This book gives an overview of the state of the art in five different approaches to social science simulation on the individual level. The volume contains microanalytical simulation models designed for policy implementation and evaluation, multilevel simulation methods designed for detecting emergent phenomena, dynamical game theory applications, the use of cellular automata to explain the emergence of structure in social systems, and multi-agent models using the experience from distributed artificial intelligence applied to special phenomena. The book collects the results of an international conference which brought together social scientists and computer scientists both engaged in a wide range of simulation approaches for the first time.},
	language = {en},
	booktitle = {Social Science Microsimulation},
	publisher = {Springer},
	author = {Moehring, Michael},
	month = nov,
	year = {1996},
	keywords = {Business \& Economics / Economics / Theory, Computers / Computer Simulation},
	file = {dagstuhl.ps:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/QGIPABDB/dagstuhl.ps:application/postscript}
},

@article{macal_tutorial_2010,
	title = {Tutorial on agent-based modelling and simulation},
	volume = {4},
	url = {http://www.palgrave-journals.com.proxy.library.uu.nl/jos/journal/v4/n3/abs/jos20103a.html},
	number = {3},
	urldate = {2012-12-25},
	author = {Macal, C. M. and North, M. J.},
	year = {2010},
	keywords = {Agent-based Simulation, Tutorial},
	pages = {151–162},
	file = {[PDF] from dtic.mil:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/57UGKU65/Macal and North - 2010 - Tutorial on agent-based modelling and simulation.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/ZPF4JD67/jos20103a.html:text/html}
},

@article{collier_parallel_2012,
	title = {Parallel agent-based simulation with Repast for High Performance Computing},
	issn = {0037-5497, 1741-3133},
	url = {http://sim.sagepub.com.proxy.library.uu.nl/content/early/2012/10/22/0037549712462620},
	doi = {10.1177/0037549712462620},
	language = {en},
	urldate = {2012-12-25},
	journal = {{SIMULATION}},
	author = {Collier, Nicholson and North, Michael},
	month = nov,
	year = {2012},
	keywords = {High Performance Computing, Parallelism, Repast},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/KTVNWB65/Collier and North - 2012 - Parallel agent-based simulation with Repast for Hi.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/CMRMCJWH/0037549712462620.full.html:text/html}
},

@article{cicirelli_hla_actor_repast:_2011,
	title = {{HLA\_ACTOR\_REPAST:} An approach to distributing {RePast} models for high-performance simulations},
	volume = {19},
	issn = {1569-{190X}},
	shorttitle = {Modeling and Performance Analysis of Networking and Collaborative Systems},
	url = {http://www.sciencedirect.com/science/article/pii/S1569190X10001346},
	doi = {10.1016/j.simpat.2010.06.013},
	abstract = {{RePast} is a popular agent toolkit with proven capabilities to fulfil the modelling challenges of large multi-agent systems ({MASs).} The toolkit, though, is normally used on a standalone workstation and therefore its practical use can be constrained (in space and time) by the limited available computing resources. This paper proposes an original approach – {HLA\_ACTOR\_REPAST} – aimed to distributing {RePast} models for high-performance simulation of complex scalable models. Novel in {HLA\_ACTOR\_REPAST} is an exploitation of a lean actor infrastructure implemented in Java. Actors bring to {RePast} agents such features as migration, location-transparent naming, efficient communications, and a control-centric framework. Actors can be orchestrated by an in-the-large custom control structure which is in charge of ensuring the necessary message causality constraints. Distribution and time management concerns depend on the {IEEE} standard {HLA} middleware. The paper first discusses details of the software engineering process underlying the development of {HLA\_ACTOR\_REPAST.} The mapping techniques, assisted by Java text annotations and aspect-oriented programming, try to minimize “code intrusions” in the original model and favour model transparency. The paper then furnishes some experimental data which witness the good performance results achieved by applying {HLA\_ACTOR\_REPAST} to a distributed version of a classic {MAS} benchmark model.},
	number = {1},
	urldate = {2012-12-25},
	journal = {Simulation Modelling Practice and Theory},
	author = {Cicirelli, Franco and Furfaro, Angelo and Giordano, Andrea and Nigro, Libero},
	month = jan,
	year = {2011},
	keywords = {Actors, {AspectJ}, {HLA/RTI}, Java, Modelling and distributed simulation, Multi-agent systems, Repast, Text annotation, Tileworld},
	pages = {283--300},
	file = {ScienceDirect Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/6KQXATPS/Cicirelli et al. - 2011 - HLA_ACTOR_REPAST An approach to distributing RePa.pdf:application/pdf;ScienceDirect Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/D6NIW7G2/S1569190X10001346.html:text/html}
},

@inproceedings{gormer_jrep:_2011,
	address = {Washington, {DC}, {USA}},
	series = {{WI-IAT} '11},
	title = {{JREP:} Extending Repast Simphony for {JADE} Agent Behavior Components},
	isbn = {978-0-7695-4513-4},
	shorttitle = {{JREP}},
	url = {http://dx.doi.org/10.1109/WI-IAT.2011.120},
	doi = {10.1109/WI-IAT.2011.120},
	abstract = {When modeling and simulating agent communities, one is usually interested in the macro effects that result at the system level from the interaction of individuals. However, when developing a scenario, designers need to specify the individual agents' behavior, their communication and organizational structure at the micro-level. Existing agent frameworks focus on either the macro or the micro perspective: Repast Simphony is an example of the former, {JADE} of the latter. We propose {JREP}, a novel integration of {JADE} and Repast Simphony that efficiently combines the macro and micro perspective with an interaction layer. It allows to see not only the overall system behavior, but also the individual together with its interests, goals and the communication to others for local coordination and cooperation. Scheduling of the agents, (time) synchronization and the registration of new agents with the environment has been solved. An agent-based airport scenario is introduced a proof of concept for modeling and simulating in the {JREP} platform, for validating scalability and performance properties, a simple coin flip scenario is described.},
	urldate = {2012-12-25},
	booktitle = {Proceedings of the 2011 {IEEE/WIC/ACM} International Conferences on Web Intelligence and Intelligent Agent Technology - Volume 02},
	publisher = {{IEEE} Computer Society},
	author = {Gormer, Jana and Homoceanu, Gianina and Mumme, Christopher and Huhn, Michaela and Muller, Jorg P.},
	year = {2011},
	keywords = {agent applications, Agent-based Simulation, {JADE}, Repast},
	pages = {149–154},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/4DHBDGUE/Gormer et al. - 2011 - JREP Extending Repast Simphony for JADE Agent Beh.pdf:application/pdf}
},

@incollection{hirsch_merging_2009,
	title = {Merging Agents and Services — the {JIAC} Agent Platform},
	copyright = {©2009 Springer-Verlag {US}},
	isbn = {978-0-387-89298-6, 978-0-387-89299-3},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-0-387-89299-3_5},
	abstract = {The {JIAC} V serviceware frame work is a Java based agent framework with its emphasis on industrial requirements such as software standards, security, management, and scalability. It has been developed within industry- and government-funded projects during the last two years. {JIAC} combines agent technology with a service oriented approach. In this chapter we describe the main features of the framework, with a particular focus on the language {JADL++} and the service matching capabilities of {JIAC} V.},
	language = {en},
	urldate = {2012-12-25},
	booktitle = {Multi-Agent Programming:},
	publisher = {Springer {US}},
	author = {Hirsch, Benjamin and Konnerth, Thomas and Heßler, Axel},
	editor = {Seghrouchni, Amal El Fallah and Dix, Jürgen and Dastani, Mehdi and Bordini, Rafael H.},
	month = jan,
	year = {2009},
	keywords = {Agent-based Simulation, Computer System Implementation, Computing Methodologies, Java, Programming Languages, Compilers, Interpreters, Programming Techniques},
	pages = {159--185},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/AAMT9F5X/Hirsch et al. - 2009 - Merging Agents and Services  the JIAC Agent Platf.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/HXUW8RD6/10.html:text/html}
},

@inproceedings{hybinette_sassy:_2006,
	title = {{SASSY:} a design for a scalable agent-based simulation system using a distributed discrete event infrastructure},
	shorttitle = {{SASSY}},
	url = {http://ieeexplore.ieee.org.proxy.library.uu.nl/xpls/abs_all.jsp?arnumber=4117701},
	urldate = {2013-01-16},
	booktitle = {Simulation Conference, 2006. {WSC} 06. Proceedings of the Winter},
	author = {Hybinette, M. and Kraemer, E. and Xiong, Y. and Matthews, G. and Ahmed, J.},
	year = {2006},
	keywords = {{PDES}, {SASSY}},
	pages = {926–933},
	file = {[PDF] from informs-sim.org:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/ICBFXWTA/Hybinette et al. - 2006 - SASSY a design for a scalable agent-based simulat.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/GK7RETRA/freeabs_all.html:text/html}
},

@article{eidhof_web_2010,
	title = {Web programming in Haskell},
	url = {http://eidhof.nl/thesis/thesis-alpha.pdf},
	urldate = {2013-01-12},
	author = {Eidhof, C.},
	year = {2010},
	keywords = {example, thesis},
	file = {[PDF] from eidhof.nl:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/NK262Q82/Eidhof - 2010 - Web programming in Haskell.pdf:application/pdf}
},

@book{railsback_agent-based_2011,
	title = {Agent-based and individual-based modeling: A practical introduction},
	shorttitle = {Agent-based and individual-based modeling},
	url = {http://books.google.com.proxy.library.uu.nl/books?hl=en&lr=&id=tSI2DkMtoWQC&oi=fnd&pg=PP2&dq=Agent-Based+and+Individual-Based+Modeling:+A+Practical+Introduction&ots=dP4_1t2KQG&sig=yJndYbIEa00gzyFpjC46AigopWo},
	urldate = {2012-12-28},
	publisher = {Princeton University Press},
	author = {Railsback, S. F. and Grimm, V.},
	year = {2011},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/TGQAQ9SA/books.html:text/html}
},

@book{salamon_design_2011,
	title = {Design of Agent-Based Models},
	url = {http://books.google.com.proxy.library.uu.nl/books?hl=en&lr=&id=2rCdKnltaH8C&oi=fnd&pg=PA1&dq=Design+of+Agent-Based+Models&ots=CA7FBR2jpF&sig=k4i1bU0RCicEfSDNXDEtzkZKOwE},
	urldate = {2012-12-28},
	publisher = {Tomá{\textbackslash}vs Bruckner},
	author = {Salamon, T.},
	year = {2011},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/X9TA5BJJ/books.html:text/html}
},

@article{grimm_pattern-oriented_2005,
	title = {Pattern-Oriented Modeling of Agent-Based Complex Systems: Lessons from Ecology},
	volume = {310},
	issn = {0036-8075, 1095-9203},
	shorttitle = {Pattern-Oriented Modeling of Agent-Based Complex Systems},
	url = {http://www.sciencemag.org/content/310/5750/987},
	doi = {10.1126/science.1116681},
	abstract = {Agent-based complex systems are dynamic networks of many interacting agents; examples include ecosystems, financial markets, and cities. The search for general principles underlying the internal organization of such systems often uses bottom-up simulation models such as cellular automata and agent-based models. No general framework for designing, testing, and analyzing bottom-up models has yet been established, but recent advances in ecological modeling have come together in a general strategy we call pattern-oriented modeling. This strategy provides a unifying framework for decoding the internal organization of agent-based complex systems and may lead toward unifying algorithmic theories of the relation between adaptive behavior and system complexity.},
	language = {en},
	number = {5750},
	urldate = {2012-12-28},
	journal = {Science},
	author = {Grimm, Volker and Revilla, Eloy and Berger, Uta and Jeltsch, Florian and Mooij, Wolf M. and Railsback, Steven F. and Thulke, Hans-Hermann and Weiner, Jacob and Wiegand, Thorsten and {DeAngelis}, Donald L.},
	month = nov,
	year = {2005},
	pages = {987--991},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/GPE7K8HB/987.html:text/html}
},

@article{grimm_standard_2006,
	title = {A standard protocol for describing individual-based and agent-based models},
	volume = {198},
	issn = {0304-3800},
	url = {http://www.sciencedirect.com/science/article/pii/S0304380006002043},
	doi = {10.1016/j.ecolmodel.2006.04.023},
	abstract = {Simulation models that describe autonomous individual organisms (individual based models, {IBM)} or agents (agent-based models, {ABM)} have become a widely used tool, not only in ecology, but also in many other disciplines dealing with complex systems made up of autonomous entities. However, there is no standard protocol for describing such simulation models, which can make them difficult to understand and to duplicate. This paper presents a proposed standard protocol, {ODD}, for describing {IBMs} and {ABMs}, developed and tested by 28 modellers who cover a wide range of fields within ecology. This protocol consists of three blocks (Overview, Design concepts, and Details), which are subdivided into seven elements: Purpose, State variables and scales, Process overview and scheduling, Design concepts, Initialization, Input, and Submodels. We explain which aspects of a model should be described in each element, and we present an example to illustrate the protocol in use. In addition, 19 examples are available in an Online Appendix. We consider {ODD} as a first step for establishing a more detailed common format of the description of {IBMs} and {ABMs.} Once initiated, the protocol will hopefully evolve as it becomes used by a sufficiently large proportion of modellers.},
	number = {1–2},
	urldate = {2012-12-28},
	journal = {Ecological Modelling},
	author = {Grimm, Volker and Berger, Uta and Bastiansen, Finn and Eliassen, Sigrunn and Ginot, Vincent and Giske, Jarl and Goss-Custard, John and Grand, Tamara and Heinz, Simone K. and Huse, Geir and Huth, Andreas and Jepsen, Jane U. and Jørgensen, Christian and Mooij, Wolf M. and Müller, Birgit and Pe’er, Guy and Piou, Cyril and Railsback, Steven F. and Robbins, Andrew M. and Robbins, Martha M. and Rossmanith, Eva and Rüger, Nadja and Strand, Espen and Souissi, Sami and Stillman, Richard A. and Vabø, Rune and Visser, Ute and {DeAngelis}, Donald L.},
	month = sep,
	year = {2006},
	keywords = {Agent-based model, Individual-based model, Model description, Scientific communication, Standardization},
	pages = {115--126},
	file = {ScienceDirect Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/AIWD8T8S/Grimm et al. - 2006 - A standard protocol for describing individual-base.pdf:application/pdf;ScienceDirect Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/BEP6DJGU/S0304380006002043.html:text/html}
},

@inproceedings{lytinen_evolution_2012,
	title = {The Evolution of Agent-based Simulation Platforms: A Review of {NetLogo} 5.0 and {ReLogo}},
	shorttitle = {The Evolution of Agent-based Simulation Platforms},
	url = {http://condor.depaul.edu/slytinen/abm/Lytinen-Railsback-EMCSR_2012-02-17.pdf},
	urldate = {2012-12-28},
	booktitle = {Proceedings of the Fourth International Symposium on Agent-Based Modeling and Simulation},
	author = {Lytinen, S. L. and Railsback, S. F.},
	year = {2012},
	file = {[PDF] from depaul.edu:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/8EII42V5/Lytinen and Railsback - 2012 - The Evolution of Agent-based Simulation Platforms.pdf:application/pdf}
},

@misc{castle_principles_2006,
	type = {Working / discussion paper},
	title = {Principles and Concepts of Agent-Based Modelling for Developing Geospatial Simulations},
	copyright = {open},
	url = {http://eprints.ucl.ac.uk/3342/},
	abstract = {The aim of this paper is to outline fundamental concepts and principles of the Agent-Based Modelling ({ABM)} paradigm, with particular reference to the development of geospatial simulations. The paper begins with a brief definition of modelling, followed by a classification of model types, and a comment regarding a shift (in certain circumstances) towards modelling systems at the individual-level. In particular, automata approaches (e.g. Cellular Automata, {CA}, and {ABM)} have been particularly popular, with {ABM} moving to the fore. A definition of agents and agent-based models is given; identifying their advantages and disadvantages, especially in relation to geospatial modelling. The potential use of agent-based models is discussed, and how-to instructions for developing an agent-based model are provided. Types of simulation / modelling systems available for {ABM} are defined, supplemented with criteria to consider before choosing a particular system for a modelling endeavour. Information pertaining to a selection of simulation / modelling systems (Swarm, {MASON}, Repast, {StarLogo}, {NetLogo}, {OBEUS}, {AgentSheets} and {AnyLogic)} is provided, categorised by their licensing policy (open source, shareware / freeware and proprietary systems). The evaluation (i.e. verification, calibration, validation and analysis) of agent-based models and their output is examined, and noteworthy applications are {discussed.Geographical} Information Systems ({GIS)} are a particularly useful medium for representing model input and output of a geospatial nature. However, {GIS} are not well suited to dynamic modelling (e.g. {ABM).} In particular, problems of representing time and change within {GIS} are highlighted. Consequently, this paper explores the opportunity of linking (through coupling or integration / embedding) a {GIS} with a simulation / modelling system purposely built, and therefore better suited to supporting the requirements of {ABM.} This paper concludes with a synthesis of the discussion that has proceeded. The aim of this paper is to outline fundamental concepts and principles of the Agent-Based Modelling ({ABM)} paradigm, with particular reference to the development of geospatial simulations. The paper begins with a brief definition of modelling, followed by a classification of model types, and a comment regarding a shift (in certain circumstances) towards modelling systems at the individual-level. In particular, automata approaches (e.g. Cellular Automata, {CA}, and {ABM)} have been particularly popular, with {ABM} moving to the fore. A definition of agents and agent-based models is given; identifying their advantages and disadvantages, especially in relation to geospatial modelling. The potential use of agent-based models is discussed, and how-to instructions for developing an agent-based model are provided. Types of simulation / modelling systems available for {ABM} are defined, supplemented with criteria to consider before choosing a particular system for a modelling endeavour. Information pertaining to a selection of simulation / modelling systems (Swarm, {MASON}, Repast, {StarLogo}, {NetLogo}, {OBEUS}, {AgentSheets} and {AnyLogic)} is provided, categorised by their licensing policy (open source, shareware / freeware and proprietary systems). The evaluation (i.e. verification, calibration, validation and analysis) of agent-based models and their output is examined, and noteworthy applications are {discussed.Geographical} Information Systems ({GIS)} are a particularly useful medium for representing model input and output of a geospatial nature. However, {GIS} are not well suited to dynamic modelling (e.g. {ABM).} In particular, problems of representing time and change within {GIS} are highlighted. Consequently, this paper explores the opportunity of linking (through coupling or integration / embedding) a {GIS} with a simulation / modelling system purposely built, and therefore better suited to supporting the requirements of {ABM.} This paper concludes with a synthesis of the discussion that has proceeded.},
	urldate = {2012-12-28},
	author = {Castle, C. J. E. and Crooks, A. T.},
	month = sep,
	year = {2006},
	keywords = {Agent-based Simulation, comparison},
	howpublished = {http://eprints.ucl.ac.uk/3342/},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/99ZMHEDQ/Castle and Crooks - 2006 - Principles and Concepts of Agent-Based Modelling f.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/P8XN5RQP/3342.html:text/html}
},

@article{toscano_parallel_2012,
	title = {Parallel Discrete Event Simulation with Erlang},
	url = {http://arxiv.org/abs/1206.2775},
	doi = {10.1145/2364474.2364487},
	abstract = {Discrete Event Simulation ({DES)} is a widely used technique in which the state of the simulator is updated by events happening at discrete points in time (hence the name). {DES} is used to model and analyze many kinds of systems, including computer architectures, communication networks, street traffic, and others. Parallel and Distributed Simulation ({PADS)} aims at improving the efficiency of {DES} by partitioning the simulation model across multiple processing elements, in order to enabling larger and/or more detailed studies to be carried out. The interest on {PADS} is increasing since the widespread availability of multicore processors and affordable high performance computing clusters. However, designing parallel simulation models requires considerable expertise, the result being that {PADS} techniques are not as widespread as they could be. In this paper we describe {ErlangTW}, a parallel simulation middleware based on the Time Warp synchronization protocol. {ErlangTW} is entirely written in Erlang, a concurrent, functional programming language specifically targeted at building distributed systems. We argue that writing parallel simulation models in Erlang is considerably easier than using conventional programming languages. Moreover, {ErlangTW} allows simulation models to be executed either on single-core, multicore and distributed computing architectures. We describe the design and prototype implementation of {ErlangTW}, and report some preliminary performance results on multicore and distributed architectures using the well known {PHOLD} benchmark.},
	urldate = {2013-01-15},
	author = {Toscano, Luca and {D'Angelo}, Gabriele and Marzolla, Moreno},
	month = jun,
	year = {2012},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, D.1.3, I.6.8},
	file = {1206.2775 PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/6E5EDEHQ/Toscano et al. - 2012 - Parallel Discrete Event Simulation with Erlang.pdf:application/pdf;arXiv.org Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/D66N8252/1206.html:text/html}
},

@techreport{berryman_review_2008,
	title = {Review of Software Platforms for Agent Based Models},
	url = {http://oai.dtic.mil/oai/oai?verb=getRecord&metadataPrefix=html&identifier=ADA485784},
	urldate = {2012-12-28},
	institution = {{DTIC} Document},
	author = {Berryman, M.},
	year = {2008},
	file = {[PDF] from dtic.mil:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/7VWZEC7E/Berryman - 2008 - Review of Software Platforms for Agent Based Model.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/QW8ERHSJ/oai.html:text/html}
},

@inproceedings{minar_swarm_1996,
	title = {The swarm simulation system: A toolkit for building multi-agent simulations},
	shorttitle = {The swarm simulation system},
	url = {https://www.swarm.org/images/b/bb/MinarEtAl96.pdf},
	urldate = {2012-12-28},
	author = {Minar, N. and Burkhart, R. and Langton, C. and Askenazi, M.},
	year = {1996},
	keywords = {Agent-based Simulation, Swarm}
},

@article{gilbert_how_2000,
	title = {How to build and use agent-based models in social science},
	volume = {1},
	issn = {1593-7879, 1860-1839},
	url = {http://link.springer.com.proxy.library.uu.nl/article/10.1007/BF02512229},
	doi = {10.1007/BF02512229},
	abstract = {The use of computer simulation for building theoretical models in social science is introduced. It is proposed that agent-based models have potential as a “third way” of carrying out social science, in addition to argumentation and formalisation. With computer simulations, in contrast to other methods, it is possible to formalise complex theories about processes, carry out experiments and observe the occurrence of emergence. Some suggestions are offered about techniques for building agent-based models and for debugging them. A scheme for structuring a simulation program into agents, the environment and other parts for modifying and observing the agents is described. The article concludes with some references to modelling tools helpful for building computer simulations.},
	language = {en},
	number = {1},
	urldate = {2012-12-29},
	journal = {Mind \& Society},
	author = {Gilbert, Nigel and Terna, Pietro},
	month = mar,
	year = {2000},
	keywords = {agent based computational economics, classifier systems, Cognitive Psychology, Economics general, genetic algorithms, Methodology of the Social Sciences, neural networks, Philosophy of Science, social simulation, Sociology},
	pages = {57--72},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/DZFR8T97/Gilbert and Terna - 2000 - How to build and use agent-based models in social .pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/T3M7G5AX/10.html:text/html}
},

@article{luke_mason:_2005,
	title = {{MASON:} A Multiagent Simulation Environment},
	volume = {81},
	issn = {0037-5497, 1741-3133},
	shorttitle = {{MASON}},
	url = {http://sim.sagepub.com.proxy.library.uu.nl/content/81/7/517},
	doi = {10.1177/0037549705058073},
	abstract = {{MASON} is a fast, easily extensible, discrete-event multi-agent simulation toolkit in Java, designed to serve as the basis for a wide range of multi-agent simulation tasks ranging from swarm robotics to machine learning to social complexity environments. {MASON} carefully delineates between model and visualization, allowing models to be dynamically detached from or attached to visualizers, and to change platforms mid-run. This paper describes the {MASON} system, its motivation, and its basic architectural design. It then compares {MASON} to related multi-agent libraries in the public domain, and discusses six applications of the system built over the past year which suggest its breadth of utility.},
	language = {en},
	number = {7},
	urldate = {2012-12-30},
	journal = {{SIMULATION}},
	author = {Luke, Sean and Cioffi-Revilla, Claudio and Panait, Liviu and Sullivan, Keith and Balan, Gabriel},
	month = jul,
	year = {2005},
	keywords = {Agent-based modeling, computational social science, Multi-agent systems, simulation},
	pages = {517--527},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/NP4T8NB5/Luke et al. - 2005 - MASON A Multiagent Simulation Environment.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/FVXHG4JP/517.html:text/html}
},

@inproceedings{vulov_quantitative_2008,
	title = {Quantitative assessment of an agent-based simulation on a time warp executive},
	url = {http://dl.acm.org.proxy.library.uu.nl/citation.cfm?id=1516933},
	urldate = {2013-01-16},
	booktitle = {Proceedings of the 40th Conference on Winter Simulation},
	author = {Vulov, G. and He, T. and Hybinette, M.},
	year = {2008},
	keywords = {{PDES}, {SASSY}},
	pages = {1068–1076},
	file = {[PDF] from informs-sim.org:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/HFQT7AFX/Vulov et al. - 2008 - Quantitative assessment of an agent-based simulati.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/VENRBBN9/citation.html:text/html}
},

@inproceedings{fujimoto_parallel_2001,
	title = {Parallel simulation: parallel and distributed simulation systems},
	shorttitle = {Parallel simulation},
	url = {http://dl.acm.org.proxy.library.uu.nl/citation.cfm?id=564124.564145},
	urldate = {2012-12-31},
	booktitle = {Proceedings of the 33nd conference on Winter simulation},
	author = {Fujimoto, R. M.},
	year = {2001},
	pages = {147–157},
	file = {[PDF] from googlecode.com:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/T6TDIDC6/Fujimoto - 2001 - Parallel simulation parallel and distributed simu.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/JIGF63F5/citation.html:text/html}
},

@book{dubitzky_large-scale_2012,
	title = {Large-scale computing techniques for complex system simulations},
	volume = {80},
	url = {http://books.google.com.proxy.library.uu.nl/books?hl=en&lr=&id=0pLZWyCd9Y4C&oi=fnd&pg=PR11&dq=Large-Scale+Computing+Techniques+for+Complex+System+Simulations&ots=2fEV_6wcUq&sig=RJ7_dIVVmkuCPhlRIuKooe93iNM},
	urldate = {2012-12-31},
	publisher = {Wiley-{IEEE} Computer Society Press},
	author = {Dubitzky, W. and Kurowski, K. and Schott, B.},
	year = {2012},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/AWTQKRUV/books.html:text/html}
},

@inproceedings{aaby_efficient_2010,
	title = {Efficient simulation of agent-based models on multi-gpu and multi-core clusters},
	url = {http://dl.acm.org.proxy.library.uu.nl/citation.cfm?id=1808181},
	urldate = {2012-12-31},
	booktitle = {Proceedings of the 3rd International {ICST} Conference on Simulation Tools and Techniques},
	author = {Aaby, B. G. and Perumalla, K. S. and Seal, S. K.},
	year = {2010},
	pages = {29},
	file = {[PDF] from kalper.net:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/F54TMWGD/Aaby et al. - 2010 - Efficient simulation of agent-based models on mult.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/MCB46ZHB/citation.html:text/html}
},

@inproceedings{moser_comparing_2011,
	title = {Comparing Parallel Simulation of Social Agents using Cilk and {OpenCL}},
	url = {http://ieeexplore.ieee.org.proxy.library.uu.nl/xpls/abs_all.jsp?arnumber=6051784},
	urldate = {2012-12-31},
	booktitle = {Distributed Simulation and Real Time Applications ({DS-RT)}, 2011 {IEEE/ACM} 15th International Symposium on},
	author = {Moser, D. and Riener, A. and Zia, K. and Ferscha, A.},
	year = {2011},
	pages = {88–97},
	file = {[PDF] from jku.at:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/T6SSK8PU/Moser et al. - 2011 - Comparing Parallel Simulation of Social Agents usi.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/RZ8ZPAWV/freeabs_all.html:text/html}
},

@inproceedings{gasser_mace3j:_2002,
	address = {New York, {NY}, {USA}},
	series = {{AAMAS} '02},
	title = {{MACE3J:} fast flexible distributed simulation of large, large-grain multi-agent systems},
	isbn = {1-58113-480-0},
	shorttitle = {{MACE3J}},
	url = {http://doi.acm.org/10.1145/544862.544918},
	doi = {10.1145/544862.544918},
	abstract = {Scientific study of multi-agent systems ({MAS)} requires infrastructure such as development testbeds and simulation tools for repeatable, controlled experiments with {MAS} structure and behavior. Testbeds and simulation tools are also critical for {MAS} education and development. A number of {MAS} testbeds currently exist, but to date none meets in a comprehensive way criteria laid out by many analysts for general, scientific, experimental study of {MAS} by a large community. Moreover, none really scales to very large {MAS} or exploits the power of modern distributed computing environments such as large multiprocessor clusters and computational grids. Because of this, and specifically to fulfill widespread need for tools supporting distributed collaborative scientific research in large-scale, large-grain {MAS}, we created the {MACE3J} system, a successor to the pioneering {MACE} {testbed.MACE3J} is a Java-based {MAS} simulation, integration, and development testbed, with a supporting library of components, examples, and documentation, distributed freely. {MACE3J} currently runs on single- and multiprocessor workstations, and in large multiprocessor cluster environments. The {MACE3J} design is multi-grain, but gives special attention to simulating very large communities of large-grain agents. It exhibits a significant degree of scalability, and has been effectively used in fast simulations of over 5,000 agents, 10,000 tasks, and {10M} messages, and on multiprocessor configurations of up to 48 processors, with a future target of at least 1000 {processors.This} paper presents {MACE3J} design criteria and our approach to a number of critical tradeoffs that, to our knowledge, have not previously been treated explicitly in {MAS} literature or platforms. We present the innovative features of the {MACE3J} architecture that contribute to its breadth, flexibility and scalability, and finally give results from the use of {MACE3J} in real experiments in realistic {MAS} domains, both simple and complex.},
	urldate = {2012-12-31},
	booktitle = {Proceedings of the first international joint conference on Autonomous agents and multiagent systems: part 2},
	publisher = {{ACM}},
	author = {Gasser, Les and Kakugawa, Kelvin},
	year = {2002},
	pages = {745–752},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/T9X2S3BS/Gasser and Kakugawa - 2002 - MACE3J fast flexible distributed simulation of la.pdf:application/pdf}
},

@incollection{horling_farm:_2004,
	series = {Lecture Notes in Computer Science},
	title = {Farm: A Scalable Environment for Multi-agent Development and Evaluation},
	copyright = {©2004 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-21182-2, 978-3-540-24625-1},
	shorttitle = {Farm},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-3-540-24625-1_13},
	abstract = {In this paper we introduce Farm, a distributed simulation environment for simulating large-scale multi-agent systems. Farm uses a component-based architecture, allowing the simulation to be easily modified and augmented, as well as distributed to spread the computational load and improve running time. Technical details of Farm’s architecture are described, along with discussion of the rationale behind this design. Performance graphs are provided, along with a brief discussion of the environments currently being modeled with Farm.},
	number = {2940},
	urldate = {2012-12-31},
	booktitle = {Software Engineering for Multi-Agent Systems {II}},
	publisher = {Springer Berlin Heidelberg},
	author = {Horling, Bryan and Mailler, Roger and Lesser, Victor},
	editor = {Lucena, Carlos and Garcia, Alessandro and Romanovsky, Alexander and Castro, Jaelson and Alencar, Paulo S. C.},
	month = jan,
	year = {2004},
	keywords = {Artificial Intelligence (incl. Robotics), Computer Communication Networks, Programming Techniques, Software Engineering, User Interfaces and Human Computer Interaction},
	pages = {225--242},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/35SZ28JU/Horling et al. - 2004 - Farm A Scalable Environment for Multi-agent Devel.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/2GZU2M7R/10.html:text/html}
},

@incollection{lees_distributed_2005,
	series = {Lecture Notes in Computer Science},
	title = {Distributed Simulation of {MAS}},
	copyright = {©2005 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-25262-7, 978-3-540-32243-6},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-3-540-32243-6_3},
	abstract = {The efficient simulation of multi-agent systems presents particular challenges which are not addressed by current parallel discrete event simulation ({PDES)} models and techniques. While the modelling and simulation of agents, at least at a coarse grain, is relatively straightforward, it is harder to apply {PDES} approaches to the simulation of the agents’ environment. In conventional {PDES} approaches a system is modelled as a set of logical processes ({LPs).} Each {LP} maintains its own portion of the state of the simulation and interacts with a small number of other {LPs.} The interaction between the {LPs} is assumed to be known in advance and does not change during the simulation. In contrast, the environment of a {MAS} is read and updated by agent and environment {LPs} in ways which depend on the evolution of the simulation. As a result, {MAS} simulations typically have a large shared state which is not associated with any particular agent or environment {LP.} In [1] we proposed a new approach to the distributed simulation of {MAS} in which the shared state is maintained by a tree of additional logical processes called Communication Logical Processes ({CLP).} In this paper we refine this model by giving precise definitions of a set of operations which allow agent and environment {LPs} to interact with the shared state and briefly outline how these operations could be implemented by a {CLP.}},
	number = {3415},
	urldate = {2012-12-31},
	booktitle = {Multi-Agent and Multi-Agent-Based Simulation},
	publisher = {Springer Berlin Heidelberg},
	author = {Lees, Michael and Logan, Brian and Minson, Rob and Oguara, Ton and Theodoropoulos, Georgios},
	editor = {Davidsson, Paul and Logan, Brian and Takadama, Keiki},
	month = jan,
	year = {2005},
	keywords = {Artificial Intelligence (incl. Robotics), Computer Appl. in Social and Behavioral Sciences, Computer Communication Networks, Information Systems Applications ({incl.Internet)}, Simulation and Modeling},
	pages = {25--36},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/N8HBS2G6/Lees et al. - 2005 - Distributed Simulation of MAS.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/XFAHAETM/10.html:text/html}
},

@article{lees_distributed_2007,
	title = {Distributed simulation of agent-based systems with {HLA}},
	volume = {17},
	issn = {1049-3301},
	url = {http://doi.acm.org/10.1145/1243991.1243992},
	doi = {10.1145/1243991.1243992},
	abstract = {In this article we describe {HLA\_AGENT}, a tool for the distributed simulation of agent-based systems, which integrates the {SIM\_AGENT} agent toolkit and the High Level Architecture ({HLA)} simulator interoperability framework. {HLA\_AGENT} offers enhanced simulation scalability and allows interoperation with other {HLA-compliant} simulators, promoting simulation reuse. Using a simple Tileworld example, we show how {HLA\_AGENT} can be used to flexibly distribute a {SIM\_AGENT} simulation so as to exploit available computing resources. We present experimental results that illustrate the performance of {HLA\_AGENT} on a Linux cluster running a distributed version of Tileworld and compare this with the original nondistributed {SIM\_AGENT} version.},
	number = {3},
	urldate = {2012-12-31},
	author = {Lees, Michael and Logan, Brian and Theodoropoulos, Georgios},
	month = jul,
	year = {2007},
	keywords = {high level architecture, {HLA\_AGENT}, {IEEE} 1516, multiagent systems},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/W73VFJFC/Lees et al. - 2007 - Distributed simulation of agent-based systems with.pdf:application/pdf}
},

@inproceedings{perumalla_mu;sik_2005,
	title = {mu;sik - a micro-kernel for parallel/distributed simulation systems},
	doi = {10.1109/PADS.2005.1},
	abstract = {A novel micro-kernel approach to building parallel/distributed simulation systems is presented. Using this approach, a unified system architecture is developed for incorporating multiple types of simulation processes. The processes hold potential to employ a variety of synchronization mechanisms, and could even alter their choice of mechanism dynamically. Supported mechanisms include traditional lookahead-based conservative and state saving-based optimistic execution approaches. Also supported are newer mechanisms such as reverse computation-based optimistic execution and aggregation-based event processing, all within a single parsimonious application programming interface. The internal implementation and a preliminary performance evaluation of this interface are presented in mu;sik, which is an efficient parallel/distributed realization of the microkernel architecture in C++.},
	booktitle = {Workshop on Principles of Advanced and Distributed Simulation, 2005. {PADS} 2005},
	author = {Perumalla, {K.S.}},
	month = jun,
	year = {2005},
	keywords = {aggregation-based event processing, application program interfaces, application programming interface, Computational modeling, Computer architecture, Concurrent computing, Discrete event simulation, Distributed computing, Educational institutions, File systems, micro-kernel approach, operating system kernels, Operating systems, parallel-distributed simulation system, parallel processing, performance evaluation, Physics, reverse computation, Switches, synchronisation, synchronization mechanism, unified system architecture},
	pages = {59 -- 68},
	file = {IEEE Xplore Abstract Record:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/6GSJA5KT/freeabs_all.html:text/html}
},

@incollection{lees_modelling_2005,
	series = {Lecture Notes in Computer Science},
	title = {Modelling Environments for Distributed Simulation},
	copyright = {©2005 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-24575-9, 978-3-540-32259-7},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-3-540-32259-7_8},
	abstract = {Decentralised, event-driven distributed simulation is particularly suitable for modelling systems with inherent asynchronous parallelism, such as agent-based systems. However the efficient simulation of multi-agent systems presents particular challenges which are not addressed by standard parallel discrete event simulation ({PDES)} models and techniques. {PDES} approaches based on the logical process paradigm assume a fixed decomposition into processes, each of which maintains its own portion of the state of the simulation. The interaction between the processes is fixed in advance and does not change during the simulation. In contrast, simulations of {MAS} typically have a large shared state, the agents’ environment, which is only loosely associated with any particular process. In this paper, we present a model of the shared state of a distributed {MAS} simulation of situated agents. We consider the problems of efficient sensing, parallel actions and action conflicts, and present preliminary work on an approach to the simulation of the environment which addresses these issues.},
	number = {3374},
	urldate = {2012-12-31},
	booktitle = {Environments for Multi-Agent Systems},
	publisher = {Springer Berlin Heidelberg},
	author = {Lees, Michael and Logan, Brian and Minson, Rob and Oguara, Ton and Theodoropoulos, Georgios},
	editor = {Weyns, Danny and Parunak, H. Van Dyke and Michel, Fabien},
	month = jan,
	year = {2005},
	keywords = {Artificial Intelligence (incl. Robotics), Computer Communication Networks},
	pages = {150--167},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/HIDPXTIF/Lees et al. - 2005 - Modelling Environments for Distributed Simulation.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/A7DQFN9V/10.html:text/html}
},

@inproceedings{riley_next_2003,
	series = {{WSC} '03},
	title = {Next generation modeling {III} - agents: Spades — a distributed agent simulation environment with software-in-the-loop execution},
	isbn = {0-7803-8132-7},
	shorttitle = {Next generation modeling {III} - agents},
	url = {http://dl.acm.org/citation.cfm?id=1030818.1030926},
	abstract = {Simulations are used extensively for studying artificial intelligence. However, the simulation technology in use by and designed for the artificial intelligence community often fails to take advantage of much of the work by the larger simulation community to produce distributed, repeatable, and efficient simulations. We present the new system known as \textit{System for Parallel Agent Discrete Event Simulator, ({SPADES)}}, which is a simulation environment for the artificial intelligence community. {\textless}i{\textgreater}{SPADES{\textless}/i{\textgreater}} focuses on the {\textless}i{\textgreater}agent{\textless}/i{\textgreater} as a fundamental simulation component. The {\textless}i{\textgreater}thinking time{\textless}/i{\textgreater} of an agent is tracked and reflected in the results of the agents' actions by using a {\textless}i{\textgreater}Software-in-the-Loop{\textless}/i{\textgreater} mechanism. {\textless}i{\textgreater}{SPADES{\textless}/i{\textgreater}} supports distributed execution of the agents across multiple systems, while at the same time producing repeatable results regardless of network or system load. We discuss the design of {\textless}i{\textgreater}{SPADES{\textless}/i{\textgreater}} in detail and give experimental results. {\textless}i{\textgreater}{SPADES{\textless}/i{\textgreater}} is flexible enough for a variety of application domains in the artificial intelligence research community.},
	urldate = {2013-01-17},
	booktitle = {Proceedings of the 35th conference on Winter simulation: driving innovation},
	publisher = {Winter Simulation Conference},
	author = {Riley, Patrick F. and Riley, George F.},
	year = {2003},
	keywords = {{SPADES}},
	pages = {817–825},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/XTB3DUI3/Riley and Riley - 2003 - Next generation modeling III - agents Spades  a .pdf:application/pdf}
},

@inproceedings{wieland_threshold_1997,
	address = {Washington, {DC}, {USA}},
	series = {{PADS} '97},
	title = {The threshold of event simultaneity},
	isbn = {0-8186-7965-4},
	url = {http://dx.doi.org/10.1145/268826.268901},
	doi = {10.1145/268826.268901},
	abstract = {We revisit the notion of event simultaneity in the context of parallel and distributed simulation. Although the simulation community has recognized this problem for years, it has focused mainly on the mechanics of breaking event-time ties and has neither measured its extent nor considered its implications. Exant simulators (both serial and parallel) prohibit simultaneity either by user-specified event priorities or by an arbitrary (but well-documented) tie-breaking mechanism. We show, theoretically and empirically, that these strategies may lead to an invalid simulation. In doing so, we introduce the threshold of event simultaneity and use it to understand the semantics of simultaneity.},
	urldate = {2013-01-17},
	booktitle = {Proceedings of the eleventh workshop on Parallel and distributed simulation},
	publisher = {{IEEE} Computer Society},
	author = {Wieland, Frederick},
	year = {1997},
	keywords = {distributed simulation, event-time ties, exant simulators, parallel programming, parallel simulation, threshold of event simultaneity, tie-breaking mechanism, user-specified event priorities},
	pages = {56–59},
	file = {ACM Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/C7R2H3F5/Wieland - 1997 - The threshold of event simultaneity.pdf:application/pdf}
},

@inproceedings{uhrmacher_distributed_2000,
	title = {Distributed, parallel simulation of multiple, deliberative agents},
	url = {http://ieeexplore.ieee.org.proxy.library.uu.nl/xpls/abs_all.jsp?arnumber=847150},
	urldate = {2013-01-17},
	booktitle = {Parallel and Distributed Simulation, 2000. {PADS} 2000. Proceedings. Fourteenth Workshop on},
	author = {Uhrmacher, A. M. and Gugler, K.},
	year = {2000},
	keywords = {{JAMES}, {PDES}},
	pages = {101–108},
	file = {[PDF] from thesciencedude.com:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/SU6PMJ2K/Uhrmacher and Gugler - 2000 - Distributed, parallel simulation of multiple, deli.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/UJNM34GM/freeabs_all.html:text/html}
},

@article{wilensky_making_2007,
	title = {Making models match: Replicating an agent-based model},
	volume = {10},
	shorttitle = {Making models match},
	url = {http://jasss.soc.surrey.ac.uk.proxy.library.uu.nl/10/4/2.html},
	number = {4},
	urldate = {2013-01-17},
	author = {Wilensky, U. and Rand, W.},
	year = {2007},
	pages = {2},
	file = {[HTML] from surrey.ac.uk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/3BBWZ8EP/2.html:text/html}
},

@incollection{zhong_using_2010,
	series = {Lecture Notes in Computer Science},
	title = {Using Model Replication to Improve the Reliability of Agent-Based Models},
	copyright = {©2010 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-12078-7, 978-3-642-12079-4},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/978-3-642-12079-4_17},
	abstract = {The basic presupposition of model replication activities for a computational model such as an agent-based model ({ABM)} is that, as a robust and reliable tool, it must be replicable in other computing settings. This assumption has recently gained attention in the community of artificial society and simulation due to the challenges of model verification and validation. Illustrating the replication of an {ABM} representing fraudulent behavior in a public service delivery system originally developed in the Java-based {MASON} toolkit for {NetLogo} by a different author, this paper exemplifies how model replication exercises provide unique opportunities for model verification and validation process. At the same time, it helps accumulate best practices and patterns of model replication and contributes to the agenda of developing a standard methodological protocol for agent-based social simulation.},
	number = {6007},
	urldate = {2013-01-17},
	booktitle = {Advances in Social Computing},
	publisher = {Springer Berlin Heidelberg},
	author = {Zhong, Wei and Kim, Yushim},
	editor = {Chai, Sun-Ki and Salerno, John J. and Mabry, Patricia L.},
	month = jan,
	year = {2010},
	keywords = {Agent-based model, Computer Appl. in Social and Behavioral Sciences, Computer Communication Networks, Computers and Society, Data Mining and Knowledge Discovery, Information Systems Applications ({incl.Internet)}, Management of Computing and Information Systems, model replication, validation, verification},
	pages = {118--127},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/NTB2TIGD/Zhong and Kim - 2010 - Using Model Replication to Improve the Reliability.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/CJJCHTZR/10.html:text/html}
},

@article{deissenberg_eurace:_2008,
	title = {{EURACE:} A massively parallel agent-based model of the European economy},
	volume = {204},
	issn = {0096-3003},
	shorttitle = {Special Issue on New Approaches in Dynamic Optimization to Assessment of Economic and Environmental Systems},
	url = {http://www.sciencedirect.com/science/article/pii/S0096300308003019},
	doi = {10.1016/j.amc.2008.05.116},
	abstract = {{EURACE} is a major European attempt to construct an agent-based model of the European economy with a very large population of autonomous, purposive agents interacting in a complicated economic environment. To create it, major advances are needed, in particular in terms of economic modeling and software engineering. In this paper, we describe the general structure of the economic model developed for {EURACE} and present the Flexible Large-scale Agent Modelling Environment ({FLAME)} that will be used to describe the agents and run the model on massively parallel supercomputers. Illustrative simulations with a simplified model based on {EURACE’s} labor market module are presented.},
	number = {2},
	urldate = {2013-01-18},
	journal = {Applied Mathematics and Computation},
	author = {Deissenberg, Christophe and van der Hoog, Sander and Dawid, Herbert},
	month = oct,
	year = {2008},
	keywords = {Agent-based computational economics, Parallel computation, X-machines},
	pages = {541--552},
	file = {ScienceDirect Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/B6CEHP9C/Deissenberg et al. - 2008 - EURACE A massively parallel agent-based model of .pdf:application/pdf;ScienceDirect Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/PH6KNCNC/S0096300308003019.html:text/html}
},

@incollection{karimabadi_parallel_2006,
	series = {Lecture Notes in Computer Science},
	title = {Parallel Discrete Event Simulations of Grid-Based Models: Asynchronous Electromagnetic Hybrid Code},
	copyright = {©2006 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-29067-4, 978-3-540-33498-9},
	shorttitle = {Parallel Discrete Event Simulations of Grid-Based Models},
	url = {http://link.springer.com.proxy.library.uu.nl/chapter/10.1007/11558958_68},
	abstract = {The traditional technique to simulate physical systems modeled by partial differential equations is by means of a time-stepped methodology where the state of the system is updated at regular discrete time intervals. This method has inherent inefficiencies. Recently, we proposed [1] a new asynchronous formulation based on a discrete-event-driven (as opposed to time-driven) approach, where the state of the simulation is updated on a “need-to-be-done-only” basis. Using a serial electrostatic implementation, we obtained more than two orders of magnitude speedup compared with traditional techniques. Here we examine issues related to the parallel extension of this technique and discuss several different parallel strategies. In particular, we present in some detail a newly developed discrete-event based parallel electromagnetic hybrid code and its performance using conservative synchronization on a cluster computer. These initial performance results are encouraging in that they demonstrate very good parallel speedup for large-scale simulation computations containing tens of thousands of cells, though overheads for inter-processor communication remain a challenge for smaller computations.},
	number = {3732},
	urldate = {2013-01-18},
	booktitle = {Applied Parallel Computing. State of the Art in Scientific Computing},
	publisher = {Springer Berlin Heidelberg},
	author = {Karimabadi, Homa and Driscoll, Jonathan and Dave, Jagrut and Omelchenko, Yuri and Perumalla, Kalyan and Fujimoto, Richard and Omidi, Nick},
	editor = {Dongarra, Jack and Madsen, Kaj and Waśniewski, Jerzy},
	month = jan,
	year = {2006},
	keywords = {Algorithm Analysis and Problem Complexity, Complexity, Computational Mathematics and Numerical Analysis, lazy evaluation, Mathematics of Computing, {PDES}, Software {Engineering/Programming} and Operating Systems},
	pages = {573--582},
	file = {Full Text PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/TD4GUFGT/Karimabadi et al. - 2006 - Parallel Discrete Event Simulations of Grid-Based .pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/AWUBWFXJ/10.html:text/html}
},

@misc{burian_complex_????,
	title = {Complex systems tutorial},
	url = {http://eldar.cz/cognition/complex/},
	urldate = {2013-02-25},
	author = {Burian, Jan},
	howpublished = {http://eldar.cz/cognition/complex/},
	file = {Complex systems tutorial:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/TB3EAG53/complex.html:text/html}
},

@article{scheutz_swages-extendable_2006,
	title = {Swages-an extendable distributed experimentation system for large-scale agent-based alife simulations},
	url = {http://www.ryanconnaughton.net/pubs/alifeswages.pdf},
	urldate = {2013-01-18},
	author = {Scheutz, M. and Schermerhorn, P. and Connaughton, R. and Dingler, A.},
	year = {2006},
	pages = {412–419},
	file = {[PDF] from ryanconnaughton.net:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/ISJVDF5M/Scheutz et al. - 2006 - Swages-an extendable distributed experimentation s.pdf:application/pdf}
},

@article{belding_numerical_2000,
	title = {Numerical Replication of Computer Simulations: Some Pitfalls and How To Avoid Them},
	shorttitle = {Numerical Replication of Computer Simulations},
	url = {http://arxiv.org/abs/nlin/0001057},
	abstract = {A computer simulation, such as a genetic algorithm, that uses {IEEE} standard floating-point arithmetic may not produce exactly the same results in two different runs, even if it is rerun on the same computer with the same input and random number seeds. Researchers should not simply assume that the results from one run replicate those from another but should verify this by actually comparing the data. However, researchers who are aware of this pitfall can reliably replicate simulations, in practice. This pa`per discusses the problem and suggests solutions.},
	urldate = {2013-01-18},
	author = {Belding, Theodore C.},
	month = jan,
	year = {2000},
	keywords = {Computer Science - Neural and Evolutionary Computing, {DRONE}, Nonlinear Sciences - Adaptation and Self-Organizing Systems},
	file = {arXiv.org Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/P3I5SF6X/0001057.html:text/html;nlin/0001057 PDF:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/5ZAJ628A/Belding - 2000 - Numerical Replication of Computer Simulations Som.pdf:application/pdf}
},

@article{chow_load_2002,
	title = {On load balancing for distributed multiagent computing},
	volume = {13},
	url = {http://ieeexplore.ieee.org.proxy.library.uu.nl/xpls/abs_all.jsp?arnumber=1028436},
	number = {8},
	urldate = {2013-01-18},
	author = {Chow, K. P. and Kwok, Y. K.},
	year = {2002},
	pages = {787–801},
	file = {[PDF] from hku.hk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/KZM54B42/Chow and Kwok - 2002 - On load balancing for distributed multiagent compu.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/MZDE5W6W/freeabs_all.html:text/html}
},

@article{massaioli_openmp_2005,
	title = {{OpenMP} parallelization of agent-based models},
	volume = {31},
	url = {http://www.sciencedirect.com.proxy.library.uu.nl/science/article/pii/S0167819105001122},
	number = {10},
	urldate = {2013-01-18},
	author = {Massaioli, F. and Castiglione, F. and Bernaschi, M.},
	year = {2005},
	pages = {1066–1081},
	file = {[PDF] from psu.edu:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/3XBV52FK/Massaioli et al. - 2005 - OpenMP parallelization of agent-based models.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/BC24DX54/S0167819105001122.html:text/html}
},

@article{koehler_clustered_2005,
	title = {Clustered Computing with Netlogo and Repast J: Beyond chewing gum and duct tape},
	author = {Koehler, {M.T.K.} and Tivnan, {B.F.} and Upton, S},
	year = {2005},
	keywords = {{HTCondor}, {NetLogo}, parameter sweep, Repast},
	file = {57255.pdf:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/ETD2XKJG/57255.pdf:application/pdf}
},

@article{scheutz_adaptive_2006,
	title = {Adaptive algorithms for the dynamic distribution and parallel execution of agent-based models},
	volume = {66},
	url = {http://www.sciencedirect.com.proxy.library.uu.nl/science/article/pii/S0743731505002194},
	number = {8},
	urldate = {2013-01-25},
	author = {Scheutz, M. and Schermerhorn, P.},
	year = {2006},
	keywords = {{SWAGES}},
	pages = {1037–1051},
	file = {[PDF] from bham.ac.uk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/KVD25T3M/Scheutz and Schermerhorn - 2006 - Adaptive algorithms for the dynamic distribution a.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/GA3IG6TF/S0743731505002194.html:text/html}
},

@inproceedings{minson_distributing_2004,
	title = {Distributing {RePast} agent-based simulations with {HLA}},
	url = {http://www.cs.bham.ac.uk/research/projects/hlarepast/Papers/ccpe-repast_win.pdf},
	urldate = {2013-01-25},
	booktitle = {Proceedings of the 2004 European Simulation Interoperability Workshop, Edinburgh, {UK}},
	author = {Minson, R. and Theodoropoulos, G.},
	year = {2004},
	keywords = {{HLA}, Repast},
	file = {[PDF] from bham.ac.uk:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/P2U62JEM/Minson and Theodoropoulos - 2004 - Distributing RePast agent-based simulations with H.pdf:application/pdf}
},

@article{misra_distributed_1986,
	title = {Distributed discrete-event simulation},
	volume = {18},
	url = {http://dl.acm.org.proxy.library.uu.nl/citation.cfm?id=6485},
	number = {1},
	urldate = {2013-01-26},
	author = {Misra, J.},
	year = {1986},
	keywords = {bryant, chandy, misra},
	pages = {39–65},
	file = {[PDF] from udel.edu:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/F4MPC8GJ/Misra - 1986 - Distributed discrete-event simulation.pdf:application/pdf;Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/8STGRMSU/citation.html:text/html}
},

@book{allen_introduction_2011,
	edition = {2011},
	title = {Introduction to Discrete Event Simulation and Agent-based Modeling: Voting Systems, Health Care, Military, and Manufacturing},
	isbn = {0857291386},
	shorttitle = {Introduction to Discrete Event Simulation and Agent-based Modeling},
	publisher = {Springer},
	author = {Allen, Theodore T.},
	month = jan,
	year = {2011}
},

@book{epstein_growing_1996,
	title = {Growing Artificial Societies: Social Science from the Bottom Up},
	isbn = {9780815715641},
	shorttitle = {Growing Artificial Societies},
	abstract = {How do social structures and group behaviors arise from the interaction of individuals? Growing Artificial Societiesapproaches this question with cutting-edge computer simulation techniques. Fundamental collective behaviors such as group formation, cultural transmission, combat, and trade are seen to "emerge" from the interaction of individual agents following a few simple rules. In their program, named Sugarscape, Epstein and Axtell begin the development of a "bottom up" social science that is capturing the attention of researchers and commentators alike. The study is part of the 2050 Project, a joint venture of the Santa Fe Institute, the World Resources Institute, and the Brookings Institution. The project is an international effort to identify conditions for a sustainable global system in the next century and to design policies to help achieve such a system. Growing Artificial Societiesis also available on {CD-ROM}, which includes about 50 animations that develop the scenarios described in the text. Copublished with the Brookings Institution},
	language = {en},
	publisher = {Brookings Institution Press},
	author = {Epstein, Joshua M. and Axtell, Robert},
	year = {1996},
	keywords = {Chapter 2, Science / Applied Sciences, Social Science / General, Social Science / Methodology, Social Science / Sociology / General, Social Science / Sociology / Urban, Sugarscape},
	file = {Growing_Artificial_Societies.pdf:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/GN626K9R/Growing_Artificial_Societies.pdf:application/pdf}
},

@misc{_arena_2013,
	title = {Arena (software)},
	copyright = {Creative Commons Attribution-{ShareAlike} License},
	url = {http://en.wikipedia.org/w/index.php?title=Arena_(software)&oldid=532662447},
	abstract = {Arena is a discrete event simulation software simulation and automation software developed by Systems Modeling and acquired by Rockwell Automation in 2000.[1] It uses the {SIMAN} processor and simulation language. As of June 2012, it is in version 14 (first version with online {3D} visualization tool). It has been suggested that Arena may join other Rockwell software packages under the {"FactoryTalk"} brand.[2]},
	language = {en},
	urldate = {2013-02-09},
	month = jan,
	year = {2013},
	note = {Page Version {ID:} 532662447},
	file = {Snapshot:/home/bezirg/.zotero/zotero/he0wzm9l.default/zotero/storage/4AKHUZS8/index.html:text/html}
}